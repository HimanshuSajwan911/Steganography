package gui.util;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import static steganography.core.Steganography.GB;
import static steganography.core.Steganography.KB;
import static steganography.core.Steganography.MB;

/** 
 *
 * @author Himanshu Sajwan.
 */
public class ValueSelector extends javax.swing.JPanel {

    private int BASE_VALUE, MULTIPLIER_VALUE;
    
    /**
     * Creates new form VauleSelector
     */
    public ValueSelector() {
        initComponents();
        resetValueReader();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BaseValueComboBox = new javax.swing.JComboBox<>();
        MultiplierButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        BaseValueLabel = new javax.swing.JLabel();
        MultiplierValueLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        BufferCapacityLabel = new javax.swing.JLabel();
        BufferPanel_backgroundImageLabel = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(500, 230));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BaseValueComboBox.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        BaseValueComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Value" }));
        BaseValueComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BaseValueComboBoxActionPerformed(evt);
            }
        });
        add(BaseValueComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 110, 30));

        MultiplierButton.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        MultiplierButton.setText("Multiplier");
        MultiplierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiplierButtonActionPerformed(evt);
            }
        });
        add(MultiplierButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, 110, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel1.setText("Base Value:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 100, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel2.setText("Multiplier");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 100, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Select Capacity");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 50));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("X");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 20, 30));

        BaseValueLabel.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        BaseValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(BaseValueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 90, 30));

        MultiplierValueLabel.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        MultiplierValueLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        add(MultiplierValueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, 90, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("=");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, 20, 30));

        BufferCapacityLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        add(BufferCapacityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 110, 140, 30));

        BufferPanel_backgroundImageLabel.setBackground(new java.awt.Color(0, 204, 51));
        BufferPanel_backgroundImageLabel.setOpaque(true);
        add(BufferPanel_backgroundImageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 230));
    }// </editor-fold>//GEN-END:initComponents

    private void BaseValueComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BaseValueComboBoxActionPerformed
        
        ComboBoxItem cb = (ComboBoxItem) BaseValueComboBox.getSelectedItem();
        BASE_VALUE = cb.getValue();
        BaseValueLabel.setText("" + BASE_VALUE);

        long result = ((long)BASE_VALUE * (long)MULTIPLIER_VALUE);

        if(result > Integer.MAX_VALUE){
            BufferCapacityLabel.setText("Value too big!");
        }
        else if(MULTIPLIER_VALUE >= 0){
            BufferCapacityLabel.setText(result + " Bytes");
        }

    }//GEN-LAST:event_BaseValueComboBoxActionPerformed

    private void MultiplierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiplierButtonActionPerformed
        
        readMultiplier();

        MultiplierValueLabel.setText("" + MULTIPLIER_VALUE);

        long result = ((long)BASE_VALUE * (long)MULTIPLIER_VALUE);

        if(result > Integer.MAX_VALUE){
            BufferCapacityLabel.setText("Value too big!");
        }
        else{
            BufferCapacityLabel.setText(result + " Bytes");
        }

    }//GEN-LAST:event_MultiplierButtonActionPerformed

    public int getBASE_VALUE() {
        return BASE_VALUE;
    }

    public int getMULTIPLIER_VALUE() {
        return MULTIPLIER_VALUE;
    }

    
    
    private void resetValueReader(){
        
        BASE_VALUE = 1;
        MULTIPLIER_VALUE = 1;
        
        Object[] items = new Object[]{new ComboBoxItem("1", 1),
                                    new ComboBoxItem("KB", KB),
                                    new ComboBoxItem("MB", MB),
                                    new ComboBoxItem("GB", GB)
                                    };
        
        DefaultComboBoxModel model = new DefaultComboBoxModel(items);
        BaseValueComboBox.setModel(model);
        
        BaseValueLabel.setText("1");
        MultiplierValueLabel.setText("1");
        
    }

    private void readMultiplier() {
        String returnVal;
        do {
            returnVal = JOptionPane.showInputDialog(null, "Input Multiplier value ", "MULTIPLIER", JOptionPane.QUESTION_MESSAGE);
            if (returnVal == null) {
                break;
            } else {
                if (!returnVal.isEmpty() && returnVal.matches("^[0-9]*")) {
                    try {
                        int multiplier = Integer.parseInt(returnVal);
                        if (multiplier < 0) {
                            JOptionPane.showMessageDialog(null, "Multiplier value cannot be negative!", "Invalid Buffer Size!", JOptionPane.WARNING_MESSAGE);
                        } 
                        else {
                            MULTIPLIER_VALUE = multiplier;
                            break;
                        }
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(null, "Input Multiplier value from 1 to " + Integer.MAX_VALUE + " only.", "Invalid Buffer Size!", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Input Multiplier value from 1 to " + Integer.MAX_VALUE + " only.", "Invalid Buffer Size!", JOptionPane.INFORMATION_MESSAGE);
                }

            }
        } while (true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BaseValueComboBox;
    private javax.swing.JLabel BaseValueLabel;
    private javax.swing.JLabel BufferCapacityLabel;
    private javax.swing.JLabel BufferPanel_backgroundImageLabel;
    private javax.swing.JButton MultiplierButton;
    private javax.swing.JLabel MultiplierValueLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables
}
